---
nvim_toggleterm_shell: "vim.o.shell"
nvim_terminal_default:
  packer: |
    use { 'akinsho/toggleterm.nvim',
      requires = {
        'is0n/fm-nvim',
      },
    }
  lazy: |
    { 'akinsho/toggleterm.nvim',
      dependencies = {
        'is0n/fm-nvim',
      },
    },
    {
      "willothy/flatten.nvim",
      config = true,
      lazy = false,
      priority = 1001,
    },
  config: |
    require('fm-nvim').setup({
      -- (Vim) Command used to open files
      edit_cmd = 'edit',
      -- See `Q&A` for more info
      on_close = {},
      on_open = {},
      -- UI Options
      ui = {
        -- Default UI (can be 'split' or 'float')
        default = 'float',
        float = {
          -- Floating window border (see ':h nvim_open_win')
          border    = 'none',
          -- Highlight group for floating window/border (see ':h winhl')
          float_hl  = 'Normal',
          border_hl = 'FloatBorder',
          -- Floating Window Transparency (see ':h winblend')
          blend     = 0,
          -- Num from 0 - 1 for measurements
          height    = 0.9,
          width     = 0.9,
          -- X and Y Axis of Window
          x         = 0.5,
          y         = 0.5
        },
        split = {
          -- Direction of split
          direction = 'topleft',
          -- Size of split
          size      = 24
        }
      },
      -- Terminal commands used w/ file manager (have to be in your $PATH)
      cmds = {
        fzf_cmd     = '{{ fzf_exe }} --preview \'{{ bat_exe }} --style=numbers --color=always --line-range :500 {}\'',
        xplr_cmd    = '{{ xplr_exe }}',
        skim_cmd    = '{{ skim_exe }}',
        broot_cmd   = '{{ broot_exe }}',
        joshuto_cmd = '{{ joshuto_exe }}',
      },
      -- Mappings used with the plugin
      mappings = {
        vert_split = '<C-v>',
        horz_split = '<C-x>',
        tabedit    = '<C-t>',
        edit       = '<C-e>',
        ESC        = '<ESC>'
      },
      -- Path to broot config
      broot_conf = '{{ broot_config }}/nvim.hjson',
    })
    require('toggleterm').setup({
      size = function(term)
        if term.direction == 'horizontal' then
          return 25
        elseif term.direction == 'vertical' then
          return vim.o.columns * 0.4
        end
      end,
      open_mapping = [[<c-s>]],
      direction = 'float',
      close_on_exit = false,
      shell = {{ nvim_toggleterm_shell }},
      float_opts = {
        border = 'shadow',
        width = function()
          return math.floor(vim.o.columns * 0.85)
        end,
        height = function()
          return math.floor(vim.o.lines * 0.85)
        end,
        winblend = 3,
        -- highlights = {
        --    border = 'Normal',
        --    background = 'Normal',
        --  }
      }
    })
    local Terminal  = require('toggleterm.terminal').Terminal
    local justchoose = Terminal:new({
      cmd = '{{ just_exe }} --choose',
      hidden = true,
      start_in_insert = true,
    })
    function just_terminal_runner()
      justchoose:toggle()
    end
    local xplr = Terminal:new({
      cmd = '{{ xplr_exe }}',
      hidden = true,
      start_in_insert = true,
      close_on_exit = true,
    })
    function xplr_terminal_runner()
      xplr:toggle()
    end
    local yazi = Terminal:new({
      cmd = '{{ yazi_exe }}',
      hidden = true,
      start_in_insert = true,
      close_on_exit = true,
    })
    function yazi_terminal_runner()
      yazi:toggle()
    end
    local yazi_cwd = Terminal:new({
      cmd = '{{ yazi_exe }}',
      dir = vim.fn.expand('%:p:~:.:h'),
      hidden = true,
      start_in_insert = true,
      close_on_exit = true,
    })
    function yazi_cwd_terminal_runner()
      yazi_cwd:toggle()
    end
  keymaps: |
    -- { '<leader>sj', { n = '<cmd>lua require(\'fm-nvim\').Joshuto(vim.fm.expand(\'%:p:~:.:h\'))<CR>', }, description = 'ToggleTerm: Joshuto(Current File)', },
    -- { '<leader>sJ', { n = '<cmd>lua require(\'fm-nvim\').Joshuto()<CR>', }, description = 'ToggleTerm: Joshuto(Project Root)', },
    -- { '<leader>x', { n = '<cmd>lua require(\'fm-nvim\').Xplr(vim.fn.expand(\'%:p:~:.:h\'))<CR>', }, description = 'ToggleTerm: XPLR(Current File)', },
    -- { '<leader>X', { n = '<cmd>lua require(\'fm-nvim\').Xplr()<CR>', }, description = 'ToggleTerm: XPLR(Project Root)', },
    -- { '<leader>gg', { n = '<cmd>lua gitui_terminal_runner()<CR>', }, description = 'ToggleTerm: GitUI', },
    { '<leader>j', { n = '<cmd>lua just_terminal_runner()<CR>', }, description = 'ToggleTerm: Justfile Chooser', },
    { '<leader>X', { n = '<cmd>lua yazi_terminal_runner()<CR>', }, description = 'ToggleTerm: Yazi(Project Root)', },
    { '<leader>x', { n = '<cmd>lua yazi_cwd_terminal_runner()<CR>', }, description = 'ToggleTerm: Yazi(Current File)', },
