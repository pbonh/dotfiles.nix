---
nvim_version: "stable"
nvim_appimage_version: "{{ nvim_version }}"
nvim_appimage_url: "https://github.com/neovim/neovim/releases/download/{{ nvim_appimage_version }}/nvim.appimage"
nvim_appimage_exe: "{{ tool_install_bin }}/nvim.appimage"
nvim_exe_url: "https://github.com/neovim/neovim/releases/download/{{ nvim_version }}"
nvim_src_install_option: false
nvim_appimage_install_option: false
nvim_src_url: "https://github.com/neovim/neovim"
nvim_src_download: "{{ dot_download_dir }}/neovim"
nvim_src_version: "stable"
nvim_src_install_dir: "{{ tool_install_dir }}/neovim"
nvim_src_install_exe: "{{ nvim_src_install_dir }}/bin/nvim"
nvim_make_exe: "{{ make_exe }}"
nvim_cmake_exe: "cmake"
nvim_gcc_exe: "{{ gcc_exe }}"
nvim_gpp_exe: "{{ gpp_exe }}"
nvim_src_make_opts:
  CMAKE_PRG: "{{ nvim_cmake_exe }}"
  CMAKE_BUILD_TYPE: Release
  CMAKE_EXTRA_FLAGS: "-DCMAKE_INSTALL_PREFIX={{ nvim_src_install_dir }} -DCMAKE_C_COMPILER={{ nvim_gcc_exe }} -DCMAKE_CXX_COMPILER={{ nvim_gpp_exe }}"
nvim_download: nvim-linux64
nvim_download_archive: "{{ nvim_download }}.tar.gz"
nvim_download_dir: "{{ dot_download_dir }}"
nvim_install_dir: "{{ nvim_download_dir }}/{{ nvim_download }}"
nvim_install_download: "{{ nvim_download_dir }}/{{ nvim_download_archive }}"
nvim_install_exe: "{{ nvim_download }}/bin/nvim"
nvim_macos_download: nvim-macos
nvim_macos_download_archive: "{{ nvim_macos_download }}.tar.gz"
nvim_macos_download_dir: "{{ dot_download_dir }}"
nvim_macos_install_dir: "{{ nvim_macos_download_dir }}/{{ nvim_macos_download }}"
nvim_macos_install_download: "{{ nvim_macos_download_dir }}/{{ nvim_macos_download_archive }}"
nvim_macos_exe: nvim-macos/bin/nvim
nvim_exe_default: "{{ bin_directory }}/nvim"
nvim_exe: "{{ nvim_exe_default }}"
nvim_cmd: "{{ nvim_exe }}"
nvim_lazy_url: "https://github.com/folke/lazy.nvim.git"
nvim_path_settings:
  - "-- vim.opt.runtimepath:remove(vim.fn.expand('{{ default_nvim_config_dir }}'))"
  - "-- vim.opt.packpath:remove(vim.fn.expand('{{ default_nvim_share_dir }}/site'))"
  - "-- vim.opt.runtimepath:append(vim.fn.expand('{{ nvim_config_dir }}'))"
  - "-- vim.opt.packpath:append(vim.fn.expand('{{ nvim_config_dir }}'))"
  - "-- vim.opt.packpath:append(vim.fn.expand('{{ nvim_share_dir }}/site'))"
nvim_xdg_config_dir: "{{ xdg_config_dir }}"
nvim_xdg_data_dir: "{{ xdg_share_dir }}"
nvim_xdg_cache_dir: "{{ xdg_cache_dir }}"
nvim_config_dir: "{{ xdg_config_dir }}/nvim"
nvim_share_dir: "{{ xdg_share_dir }}/nvim"
nvim_cache_dir: "{{ xdg_cache_dir }}/nvim"
default_nvim_config_dir: "{{ nvim_xdg_config_dir }}/nvim"
default_nvim_share_dir: "{{ nvim_xdg_data_dir }}/nvim"
default_nvim_cache_dir: "{{ nvim_xdg_cache_dir }}/nvim"
packer_url: "https://github.com/wbthomason/packer.nvim" 
nvim_packer_reldir: "site/pack/packer/start/packer.nvim"
nvim_packer_dir: "{{ nvim_share_dir }}/{{ nvim_packer_reldir }}"
nvim_vim_plug_dir: "{{ nvim_share_dir }}/site/autoload"
nvim_plugged_dir: "{{ nvim_share_dir }}/plugged"
nvim_init_lua: "{{ nvim_config_dir }}/init.lua"
nvim_init: "{{ nvim_config_dir }}/init.vim"
nvim_lua_config_dir: "{{ nvim_config_dir }}/lua"
nvim_config_lua: "{{ nvim_lua_config_dir }}/config.lua"
nvim_plugin_config_dir: "{{ nvim_config_dir }}/nvim-config"
nvim_coc_settings_file: "{{ nvim_config_dir }}/coc-settings.json"
nvim_filetype_dir: "{{ nvim_config_dir }}/ftdetect"
nvim_syntax_dir: "{{ nvim_config_dir }}/syntax"
nvim_filetype_settings_dir: "{{ nvim_config_dir }}/ftplugin"
nvim_projects_dir: "{{ nvim_xdg_config_dir }}/nvim/projects"
nvim_shell_cmd: "zsh"
nvim_shell: "/bin/{{ nvim_shell_cmd }}"
nvim_fterm_cmds:
  - cmd_name: ManLs
    cmd_str: "man ls"
  - cmd_name: BTop
    cmd_str: "btop"
nvim_custom_filetypes: {}
lsp_provider_neovim_plugins: []
language_neovim_plugins: []
ale_plugin_settings: ''
neoformat_plugin_settings: ''
dap_plugin_settings: []
extra_nvim_lua_settings: []
extra_nvim_vimscript_settings: []
extra_plugin_settings: []
extra_lua_plugin_settings: []
extra_nvim_language_mappings: []
lsp_providers: []
lsp_providers_luafile: "{{ \"'\" + lsp_providers | join(\"', '\") + \"'\" }}"
lsp_providers_file: "{{ (lsp_providers_luafile != '') | ternary(lsp_providers_luafile, '-- No Additional Servers Preconfigured') }}"
lsp_providers_plugins: []
lsp_providers_setup: []
treesitter_parsers: []
treesitter_custom_parsers_default:
  - norg_meta
  - norg_table
treesitter_custom_parsers: "{{ treesitter_custom_parsers_default }}"
treesitter_parsers_all: "{{ treesitter_parsers + treesitter_custom_parsers }}"
treesitter_extra_config: []
refactoring_settings: []
telescope_picker_config: ''
nvim_completion_config: []
treesitter_custom_parsers_info: |
  parser_configs.norg_meta = {
      install_info = {
          url = 'https://github.com/nvim-neorg/tree-sitter-norg-meta',
          files = { 'src/parser.c' },
          branch = 'main'
      },
  }
  parser_configs.norg_table = {
      install_info = {
          url = 'https://github.com/nvim-neorg/tree-sitter-norg-table',
          files = { 'src/parser.c' },
          branch = 'main'
      },
  }
lsp_provider_file: "{{ '''' + lsp_providers |join(''', ''') + '''' }}"
lsp_provider_plugins_file: "{{ lsp_providers_plugins | join('\n') }}"
lsp_provider_lspconfig_setup_file: "{{ lsp_providers_setup | join('\n') }}"
lsp_provider_neovim_plugins_file: "{{ lsp_provider_neovim_plugins | join('\n') }}"
language_neovim_plugins_file: "{{ language_neovim_plugins | join('\n') }}"
treesitter_parsers_file: "{{ '\"' + treesitter_parsers_all |join('\", \"') + '\"' }}"
treesitter_parsers_luafile: "{{ \"'\" + treesitter_parsers_all | join(\"', '\") + \"'\" }}"
refactoring_settings_file: "{{ refactoring_settings | join('\n') }}"
dap_plugin_settings_file: "{{ dap_plugin_settings | join('\n') }}"
extra_nvim_lua_settings_file: "{{ extra_nvim_lua_settings | join('\n') }}"
extra_plugin_settings_file: "{{ extra_plugin_settings | join('\n') }}"
extra_lua_plugin_settings_file: "{{ extra_lua_plugin_settings | join('\n') }}"
extra_bookmarks_startify: "{{ '\"' + extra_bookmarks |join('\", \"') + '\"' }}"
extra_bookmarks_project: "{{ extra_bookmarks_startify }}"
lsp_provider_coc_settings: {}
lsp_provider_coc_settings_base:
  diagnostic.displayByAle: true
lsp_provider_coc_settings_languageserver:
  languageserver: "{{ lsp_provider_coc_settings }}"
lsp_provider_coc_settings_merged: "{{ lsp_provider_coc_settings_base | combine(lsp_provider_coc_settings_languageserver) }}"
lsp_provider_coc_settings_json: "{{ lsp_provider_coc_settings_merged | to_nice_json }}"
nvim_test_enable: false
