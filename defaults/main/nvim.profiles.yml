---
nvim_profile_dir_name: "nvim-profiles"
nvim_xdg_profile_dir: 
  config: "{{ xdg_config_dir }}/{{ nvim_profile_dir_name }}"
  share: "{{ xdg_share_dir }}/{{ nvim_profile_dir_name }}"
  cache: "{{ xdg_cache_dir }}/{{ nvim_profile_dir_name }}"
nvim_default_editor_options: |
  vim.g.loaded_netrw = 1
  vim.g.loaded_netrwPlugin = 1
  vim.opt.shell= '{{ nvim_shell }}'
  vim.opt.termguicolors = true
  vim.opt.hidden = true
  vim.opt.magic = true
  vim.opt.virtualedit = 'block'
  vim.opt.clipboard = 'unnamedplus'
  vim.opt.wildignorecase = true
  vim.opt.swapfile = false
  vim.opt.directory = '{{ nvim_cache_dir }}' .. 'swap/'
  vim.opt.undodir = '{{ nvim_cache_dir }}' .. 'undo/'
  vim.opt.backupdir = '{{ nvim_cache_dir }}' .. 'backup/'
  vim.opt.viewdir = '{{ nvim_cache_dir }}' .. 'view/'
  vim.opt.spellfile = '{{ nvim_cache_dir }}' .. 'spell/en.uft-8.add'
  vim.opt.history = 2000
  vim.opt.timeout = true
  vim.opt.ttimeout = true
  vim.opt.timeoutlen = 100
  vim.opt.ttimeoutlen = 10
  vim.opt.updatetime = 100
  vim.opt.redrawtime = 1500
  vim.opt.ignorecase = true
  vim.opt.smartcase = true
  vim.opt.infercase = true
  vim.opt.grepformat = '%f:%l:%c:%m,%f:%l:%m'
  vim.opt.grepprg = '{{ rg_exe }} --vimgrep --no-heading --smart-case'
  vim.opt.completeopt = 'menu,menuone,noselect'
  vim.opt.showmode = false
  vim.opt.shortmess = 'aoOTIcF'
  vim.opt.scrolloff = 2
  vim.opt.sidescrolloff = 5
  vim.opt.ruler = false
  vim.opt.showtabline = 0
  vim.opt.winwidth = 10
  vim.opt.pumheight = 15
  vim.opt.showcmd = false
  vim.opt.cmdheight = 0
  vim.opt.laststatus = 3
  vim.opt.list = true
  vim.opt.listchars = 'tab:»·,nbsp:+,trail:·,extends:→,precedes:←'
  vim.opt.pumblend = 10
  vim.opt.winblend = 10
  vim.opt.undofile = true
  vim.opt.smarttab = true
  vim.opt.expandtab = true
  -- vim.opt.autoindent = true
  vim.opt.tabstop = 2
  vim.opt.shiftwidth = 2
  vim.opt.linebreak = true
  vim.opt.whichwrap = 'h,l,<,>,[,],~'
  -- vim.opt.breakindentopt = 'shift:2,min:20'
  vim.opt.showbreak = '↳  '
  vim.opt.number = true
  vim.opt.relativenumber = true
  vim.opt.cursorline = true
  vim.opt.wrap = false
  vim.opt.signcolumn = 'yes'
  vim.opt.spelloptions = 'camel'
  vim.opt.textwidth = 100
  vim.opt.colorcolumn = '100'
  -- vim.g.python3_host_prog = '{{ nvim_python_exe }}'
  -- vim.opt.conceallevel = 2
  -- vim.opt.concealcursor = 'niv'
nvim_default_keymap_options: |
  vim.g.mapleader = ' '
  vim.g.maplocalleader = ' '
  vim.api.nvim_set_keymap('', '<Space>', '<Nop>', { noremap = true, silent = true })
  vim.api.nvim_set_keymap('t', '<C-]>', '<C-\\><C-n> ', { noremap = true, silent = true })
  vim.api.nvim_set_keymap('t', '<C-h>', '<C-\\><C-n><C-W>h ', { noremap = true, silent = true })
  vim.api.nvim_set_keymap('t', '<C-j>', '<C-\\><C-n><C-W>j ', { noremap = true, silent = true })
  vim.api.nvim_set_keymap('t', '<C-k>', '<C-\\><C-n><C-W>k ', { noremap = true, silent = true })
  vim.api.nvim_set_keymap('t', '<C-l>', '<C-\\><C-n><C-W>l ', { noremap = true, silent = true })
  -- vim.api.nvim_set_keymap('n', 'k', \"v:count == 0 ? 'gk' : 'k'\", { noremap = true, expr = true, silent = true })
  -- vim.api.nvim_set_keymap('n', 'j', \"v:count == 0 ? 'gj' : 'j'\", { noremap = true, expr = true, silent = true })
nvim_default_keymap_options_file: "{{ nvim_default_keymap_options }}"
nvim_default_ui_options: |
  vim.opt.sessionoptions = 'buffers,curdir,folds,help,tabpages,winsize,winpos,terminal,globals'
nvim_plugin_example:
  plugin:
    packer: |
      use 'path/to/plugin'
    config: |
      require('plugin').setup()
    keymaps: |
      { '<leader>_', { n = '<cmd>command<CR>', }, description = 'Description', },
nvim_default_plugins:
  ui: "{{ nvim_ui_default }}"
  legendary: "{{ nvim_legendary_default }}"
  telescope: "{{ nvim_telescope_default }}"
  hydra: "{{ nvim_hydra_default }}"
  treesitter: "{{ nvim_treesitter_default }}"
  git: "{{ nvim_git_default }}"
  terminal: "{{ nvim_terminal_default }}"
  motion: "{{ nvim_motion_default }}"
  colorscheme: "{{ nvim_colorscheme_default }}"
  intellisense: "{{ nvim_intellisense_default }}"
  debugger: "{{ nvim_debugger_default }}"
nvim_extra_plugins: {}
nvim_startup_commands: |
  vim.cmd("WindowsDisableAutowidth")
nvim_xdg_profiles:
  musl:
    name: musl
# cosynvim:
#   name: cosynvim
# basicide:
#   name: basic-ide
# kickstart:
#   name: kickstart
